/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Azuki,
  AzukiInterface,
} from "../../../contracts/NftContract.sol/Azuki";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600581526020017f417a756b690000000000000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f415a554b4900000000000000000000000000000000000000000000000000000081525081600290816200008f91906200033f565b508060039081620000a191906200033f565b50620000b2620000c060201b60201c565b600081905550505062000426565b600090565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200014757607f821691505b6020821081036200015d576200015c620000ff565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001c77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000188565b620001d3868362000188565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002206200021a6200021484620001eb565b620001f5565b620001eb565b9050919050565b6000819050919050565b6200023c83620001ff565b620002546200024b8262000227565b84845462000195565b825550505050565b600090565b6200026b6200025c565b6200027881848462000231565b505050565b5b81811015620002a0576200029460008262000261565b6001810190506200027e565b5050565b601f821115620002ef57620002b98162000163565b620002c48462000178565b81016020851015620002d4578190505b620002ec620002e38562000178565b8301826200027d565b50505b505050565b600082821c905092915050565b60006200031460001984600802620002f4565b1980831691505092915050565b60006200032f838362000301565b9150826002028217905092915050565b6200034a82620000c5565b67ffffffffffffffff811115620003665762000365620000d0565b5b6200037282546200012e565b6200037f828285620002a4565b600060209050601f831160018114620003b75760008415620003a2578287015190505b620003ae858262000321565b8655506200041e565b601f198416620003c78662000163565b60005b82811015620003f157848901518255600182019150602085019450602081019050620003ca565b868310156200041157848901516200040d601f89168262000301565b8355505b6001600288020188555050505b505050505050565b611b0a80620004366000396000f3fe6080604052600436106100e85760003560e01c80636352211e1161008a578063a22cb46511610059578063a22cb465146102d2578063b88d4fde146102fb578063c87b56dd14610317578063e985e9c514610354576100e8565b80636352211e1461021157806370a082311461024e57806395d89b411461028b578063a0712d68146102b6576100e8565b8063095ea7b3116100c6578063095ea7b31461019257806318160ddd146101ae57806323b872dd146101d957806342842e0e146101f5576100e8565b806301ffc9a7146100ed57806306fdde031461012a578063081812fc14610155575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f91906113e3565b610391565b604051610121919061142b565b60405180910390f35b34801561013657600080fd5b5061013f610423565b60405161014c91906114d6565b60405180910390f35b34801561016157600080fd5b5061017c6004803603810190610177919061152e565b6104b5565b604051610189919061159c565b60405180910390f35b6101ac60048036038101906101a791906115e3565b610534565b005b3480156101ba57600080fd5b506101c3610678565b6040516101d09190611632565b60405180910390f35b6101f360048036038101906101ee919061164d565b61068f565b005b61020f600480360381019061020a919061164d565b6109b1565b005b34801561021d57600080fd5b506102386004803603810190610233919061152e565b6109d1565b604051610245919061159c565b60405180910390f35b34801561025a57600080fd5b50610275600480360381019061027091906116a0565b6109e3565b6040516102829190611632565b60405180910390f35b34801561029757600080fd5b506102a0610a9b565b6040516102ad91906114d6565b60405180910390f35b6102d060048036038101906102cb919061152e565b610b2d565b005b3480156102de57600080fd5b506102f960048036038101906102f491906116f9565b610b3a565b005b6103156004803603810190610310919061186e565b610c45565b005b34801561032357600080fd5b5061033e6004803603810190610339919061152e565b610cb8565b60405161034b91906114d6565b60405180910390f35b34801561036057600080fd5b5061037b600480360381019061037691906118f1565b610d56565b604051610388919061142b565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103ec57506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061041c5750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461043290611960565b80601f016020809104026020016040519081016040528092919081815260200182805461045e90611960565b80156104ab5780601f10610480576101008083540402835291602001916104ab565b820191906000526020600020905b81548152906001019060200180831161048e57829003601f168201915b5050505050905090565b60006104c082610dea565b6104f6576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061053f826109d1565b90508073ffffffffffffffffffffffffffffffffffffffff16610560610e49565b73ffffffffffffffffffffffffffffffffffffffff16146105c35761058c81610587610e49565b610d56565b6105c2576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610682610e51565b6001546000540303905090565b600061069a82610e56565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610701576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061070d84610f22565b91509150610723818761071e610e49565b610f49565b61076f5761073886610733610e49565b610d56565b61076e576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036107d5576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107e28686866001610f8d565b80156107ed57600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506108bb85610897888887610f93565b7c020000000000000000000000000000000000000000000000000000000017610fbb565b600460008681526020019081526020016000208190555060007c0200000000000000000000000000000000000000000000000000000000841603610941576000600185019050600060046000838152602001908152602001600020540361093f57600054811461093e578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46109a98686866001610fe6565b505050505050565b6109cc83838360405180602001604052806000815250610c45565b505050565b60006109dc82610e56565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a4a576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610aaa90611960565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad690611960565b8015610b235780601f10610af857610100808354040283529160200191610b23565b820191906000526020600020905b815481529060010190602001808311610b0657829003601f168201915b5050505050905090565b610b373382610fec565b50565b8060076000610b47610e49565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610bf4610e49565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c39919061142b565b60405180910390a35050565b610c5084848461068f565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610cb257610c7b848484846111a7565b610cb1576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610cc382610dea565b610cf9576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610d036112f7565b90506000815103610d235760405180602001604052806000815250610d4e565b80610d2d8461130e565b604051602001610d3e9291906119cd565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610df5610e51565b11158015610e04575060005482105b8015610e42575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610e65610e51565b11610eeb57600054811015610eea5760006004600083815260200190815260200160002054905060007c0100000000000000000000000000000000000000000000000000000000821603610ee8575b60008103610ede576004600083600190039350838152602001908152602001600020549050610eb4565b8092505050610f1d565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610faa86868461135e565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b6000805490506000820361102c576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110396000848385610f8d565b600160406001901b178202600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506110b0836110a16000866000610f93565b6110aa85611367565b17610fbb565b6004600083815260200190815260200160002081905550600080838301905073ffffffffffffffffffffffffffffffffffffffff85169150828260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600183015b81811461115157808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600181019050611116565b506000820361118c576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060008190555050506111a26000848385610fe6565b505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111cd610e49565b8786866040518563ffffffff1660e01b81526004016111ef9493929190611a46565b6020604051808303816000875af192505050801561122b57506040513d601f19601f820116820180604052508101906112289190611aa7565b60015b6112a4573d806000811461125b576040519150601f19603f3d011682016040523d82523d6000602084013e611260565b606091505b50600081510361129c576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b60011561134957600184039350600a81066030018453600a8104905080611327575b50828103602084039350808452505050919050565b60009392505050565b60006001821460e11b9050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113c08161138b565b81146113cb57600080fd5b50565b6000813590506113dd816113b7565b92915050565b6000602082840312156113f9576113f8611381565b5b6000611407848285016113ce565b91505092915050565b60008115159050919050565b61142581611410565b82525050565b6000602082019050611440600083018461141c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611480578082015181840152602081019050611465565b60008484015250505050565b6000601f19601f8301169050919050565b60006114a882611446565b6114b28185611451565b93506114c2818560208601611462565b6114cb8161148c565b840191505092915050565b600060208201905081810360008301526114f0818461149d565b905092915050565b6000819050919050565b61150b816114f8565b811461151657600080fd5b50565b60008135905061152881611502565b92915050565b60006020828403121561154457611543611381565b5b600061155284828501611519565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115868261155b565b9050919050565b6115968161157b565b82525050565b60006020820190506115b1600083018461158d565b92915050565b6115c08161157b565b81146115cb57600080fd5b50565b6000813590506115dd816115b7565b92915050565b600080604083850312156115fa576115f9611381565b5b6000611608858286016115ce565b925050602061161985828601611519565b9150509250929050565b61162c816114f8565b82525050565b60006020820190506116476000830184611623565b92915050565b60008060006060848603121561166657611665611381565b5b6000611674868287016115ce565b9350506020611685868287016115ce565b925050604061169686828701611519565b9150509250925092565b6000602082840312156116b6576116b5611381565b5b60006116c4848285016115ce565b91505092915050565b6116d681611410565b81146116e157600080fd5b50565b6000813590506116f3816116cd565b92915050565b600080604083850312156117105761170f611381565b5b600061171e858286016115ce565b925050602061172f858286016116e4565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61177b8261148c565b810181811067ffffffffffffffff8211171561179a57611799611743565b5b80604052505050565b60006117ad611377565b90506117b98282611772565b919050565b600067ffffffffffffffff8211156117d9576117d8611743565b5b6117e28261148c565b9050602081019050919050565b82818337600083830152505050565b600061181161180c846117be565b6117a3565b90508281526020810184848401111561182d5761182c61173e565b5b6118388482856117ef565b509392505050565b600082601f83011261185557611854611739565b5b81356118658482602086016117fe565b91505092915050565b6000806000806080858703121561188857611887611381565b5b6000611896878288016115ce565b94505060206118a7878288016115ce565b93505060406118b887828801611519565b925050606085013567ffffffffffffffff8111156118d9576118d8611386565b5b6118e587828801611840565b91505092959194509250565b6000806040838503121561190857611907611381565b5b6000611916858286016115ce565b9250506020611927858286016115ce565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061197857607f821691505b60208210810361198b5761198a611931565b5b50919050565b600081905092915050565b60006119a782611446565b6119b18185611991565b93506119c1818560208601611462565b80840191505092915050565b60006119d9828561199c565b91506119e5828461199c565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611a18826119f1565b611a2281856119fc565b9350611a32818560208601611462565b611a3b8161148c565b840191505092915050565b6000608082019050611a5b600083018761158d565b611a68602083018661158d565b611a756040830185611623565b8181036060830152611a878184611a0d565b905095945050505050565b600081519050611aa1816113b7565b92915050565b600060208284031215611abd57611abc611381565b5b6000611acb84828501611a92565b9150509291505056fea26469706673582212206c0afa8b16fc3040c63a5a92b0e729bf31f6f1d9c91889aeb5c882afb409c2e264736f6c63430008120033";

type AzukiConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AzukiConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Azuki__factory extends ContractFactory {
  constructor(...args: AzukiConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Azuki> {
    return super.deploy(overrides || {}) as Promise<Azuki>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Azuki {
    return super.attach(address) as Azuki;
  }
  override connect(signer: Signer): Azuki__factory {
    return super.connect(signer) as Azuki__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AzukiInterface {
    return new utils.Interface(_abi) as AzukiInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Azuki {
    return new Contract(address, _abi, signerOrProvider) as Azuki;
  }
}
